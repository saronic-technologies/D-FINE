__include__: [
  '../../dataset/ir_custom_detection.yml',
  '../../runtime.yml',
  '../include/dataloader.yml',
  '../include/optimizer.yml',
  '../include/dfine_hgnetv2.yml',
]

output_dir: ./output/dfine_hgnetv2_m_custom


DFINE:
  backbone: HGNetv2

HGNetv2:
  name: 'B2'
  return_idx: [1, 2, 3]
  freeze_at: -1
  freeze_norm: False
  use_lab: True

DFINETransformer:
  num_layers: 4  # 5 6
  eval_idx: -1  # -2 -3

HybridEncoder:
  in_channels: [384, 768, 1536]
  hidden_dim: 256
  depth_mult: 0.67

optimizer:
  type: AdamW
  params:
    -
      params: '^(?=.*backbone)(?!.*norm|bn).*$'
      lr: 0.0001
    -
      params: '^(?=.*backbone)(?=.*norm|bn).*$'
      lr: 0.0001
      weight_decay: 0.
    -
      params: '^(?=.*(?:encoder|decoder))(?=.*(?:norm|bn|bias)).*$'
      weight_decay: 0.

  lr: 0.001
  betas: [0.9, 0.999]
  weight_decay: 0.0001


# Increase to search for the optimal ema
epochs: 132 # 120 + 4n
# ---------------------------------------------------------------------------
# DATA-LOADER OVERRIDES FOR 640 Ã— 512 INPUT RESOLUTION
# ---------------------------------------------------------------------------

train_dataloader:
  dataset:
    transforms:
      ops:
        - {type: RandomPhotometricDistort, p: 0.5}
        - {type: RandomZoomOut, fill: 0}
        - {type: RandomIoUCrop, p: 0.8}
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: RandomHorizontalFlip}
        - {type: Resize, size: [640, 512]}
        - {type: SanitizeBoundingBoxes, min_size: 1}
        - {type: ConvertPILImage, dtype: 'float32', scale: True}
        - {type: ConvertBoxes, fmt: 'cxcywh', normalize: True}
      policy:
        epoch: 120
        ops: ['RandomPhotometricDistort', 'RandomZoomOut', 'RandomIoUCrop']
  collate_fn:
    type: BatchImageCollateFunction
    base_size: 640
    base_size_repeat: 6
    stop_epoch: 120
    ema_restart_decay: 0.9998

val_dataloader:
  dataset:
    transforms:
      ops:
        - {type: Resize, size: [640, 512]}
        - {type: ConvertPILImage, dtype: 'float32', scale: True}
        - {type: ConvertBoxes, fmt: 'cxcywh', normalize: True}
  collate_fn:
    type: BatchImageCollateFunction
    base_size: 640
# keep other parameters (batch_size, num_workers, etc.) from included file
